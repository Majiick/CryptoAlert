# The build context for my own Dockerfiles is where the docker-compose.yml file is in order to share some common files. 
# The Dockerfiles themselves get their location through the HOST_DOCKERFILE_DIR arg which the docker-compose.yml file passes to them.
# The ARG is needed so we do not hard-code the relative location of the dockerfile inside the dockerfile itself which might cause it to break when its directory changes.

version: '3'

services:
        logging:
                build:
                        args:
                                - HOST_DOCKERFILE_DIR=/common/logging/
                        context: .
                        dockerfile: ./common/logging/Dockerfile
        webapp:
                build:
                        args:
                                - HOST_DOCKERFILE_DIR=/webapp/
                        context: .
                        dockerfile: ./webapp/Dockerfile
                volumes:
                        - run-volume:/run
                        - static-volume:/code/static/
        collector-orchestrator:
                build:
                        args:
                                - HOST_DOCKERFILE_DIR=/collection/
                        context: .
                        dockerfile: ./collection/Dockerfile
        collector:
                build:
                        args:
                        - HOST_DOCKERFILE_DIR=/collection/collector/
                        context: .
                        dockerfile: ./collection/collector/Dockerfile
        alert_generation:
                build: 
                        args:
                                - HOST_DOCKERFILE_DIR=/alert_generation/
                        context: .
                        dockerfile: ./alert_generation/Dockerfile
        socketio_server:
                build:
                        args:
                                - HOST_DOCKERFILE_DIR=/alert_generation/socketio_server/ 
                        context: .
                        dockerfile: ./alert_generation/socketio_server/Dockerfile
                ports:
                        - "443:443"
        postgres:
                image: "postgres"
                # restart: always
                environment:
                - POSTGRES_PASSWORD:password
                volumes:
                - postgres-data:/var/lib/postgresql/data
                ports:
                - "5432:5432"
        influxdb:
                image: "influxdb"
                ports:
                - "8086:8086"
                volumes:
                - influx-data:/var/lib/influxdb

        nginx:
                image: "nginx"
                volumes:
                - ./webapp/nginx.conf:/etc/nginx/nginx.conf
                - run-volume:/run
                - static-volume:/code/static/
                ports:
                - "80:80"
                #  - "443:443"
        grafana:
                image: "grafana/grafana"
                volumes:
                - ./grafana/grafana.ini:/etc/grafana/grafana.ini
                - grafana-data:/var/lib/grafana
                ports:
                - "3000:3000"

volumes:
        run-volume:  # To share the gunicorn sock
        grafana-data:  # To persist grafana db
        influx-data:  # To persist influx db
        static-volume: # To share the static files for Flask with Nginx
        postgres-data: # To persist postgre db
